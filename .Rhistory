str(allDoTemp)
dat$datetime<-mdy_hm(dat$datetime)
allDoTemp$datetime<-mdy_hm(allDoTemp$datetime)
View(allDoTemp)
ggplot(data = allDoTemp, aes(x=datetime, y=DO_mgL, color=Site))+
geom_line()
##Too much data, par it down to after 4/30/24
allDoTemp %>%
filter(date >= "2024-04-30 0:00:00")
##Too much data, par it down to after 4/30/24
allDoTemp %>%
filter(date <= "2024-04-30 0:00:00")
man_Do_temp <- read_csv("man_Do_Temp.csv")
chelsea_Do_Temp <- read_csv("chelsea_Do_Temp.csv")
thorn_Do_Temp <- read_csv("thorn_Do_Temp.csv")
hood_Do_Temp <- read_csv("hood_Do_Temp.csv")
library(tidyverse)
##merge all data into one file
allDoTemp <- rbind(man_Do_Temp, chelsea_Do_Temp, hood_Do_Temp, thorn_Do_Temp)
##R can't handle our date and time formate, use lubridate to fix this
str(allDoTemp)
allDoTemp$datetime<-mdy_hm(allDoTemp$datetime)
View(allDoTemp)
allDoTemp %>%
filter(date <= "2024-04-30 12:00:00")
##Too much data, par it down to after 4/30/24
allDoTemp %>%
filter(date >= "2024-04-30 12:00:00")
#Packages
library(tidyverse)
#Read in the datat
man_Do_Temp  <- read.csv("man_Do_Temp.csv")
chelsea_Do_Temp <- read.csv("chelsea_Do_Temp.csv")
thorn_Do_Temp <- read.csv("thorn_Do_Temp.csv")
hood_Do_Temp <- read.csv("hood_Do_Temp.csv")
#inspect the data
str(chelsea_Do_Temp)
str(thorn_Do_Temp)
str(hood_Do_Temp)
##merge all data into one file
allDoTemp <- rbind(man_Do_Temp, chelsea_Do_Temp, hood_Do_Temp, thorn_Do_Temp) %>% filter(datetime != "NA")
# Convert the Date.Time..GMT.07.00 column to date-time format
allDoTemp <- allDoTemp %>%
mutate(Date.Time..GMT.07.00 = mdy_hm(Date.Time..GMT.07.00, tz = "Etc/GMT+7"))
##R can't handle our date and time formate, use lubridate to fix this
str(allDoTemp)
allDoTemp$datetime <- mdy_hm(allDoTemp$datetime)
allDoTemp$datetime<-mdy_hm(allDoTemp$datetime)
#Check end of data
tail(allDoTemp)
##Too much data, par it down to after 4/30/24
<<<<<<< Updated upstream
# Filter out rows where Date.Time..GMT.07.00 is less than or equal to "2024-04-30 12:00:00"
filtered_data <- allDoTemp %>%
filter(Date.Time..GMT.07.00 >= ymd_hms("2024-04-30 12:00:00", tz = "Etc/GMT+7"))
allDoTemp %>%
filter(date >= "2024-04-30 12:00:00")
View(filtered_data)
View(filtered_data)
geom_line()
geom_line()
stat_identity(na.rn + TRUE)
ggplot(data=filtered_data, aes(x=Date.Time..GMT.07.00, y=DO_mgL, color=Site))
geom_line(na.rm = TRUE)
stat_identity(na.rm + TRUE)
ggplot(data=filtered_data, aes(x=Date.Time..GMT.07.00, y=DO_mgL, fill=Site))
geom_line(na.rm = TRUE)
stat_identity(na.rm + TRUE)
geom_line()
ggplot(data=filtered_data, aes(x=Date.Time..GMT.07.00, y=DO_mgL, color=Site))
geom_line()
geom_line()
geom_line(na.rm = TRUE)
# Example of converting to POSIXct datetime
filtered_data$Date.Time..GMT.07.00 <- as.POSIXct(filtered_data$Date.Time..GMT.07.00, format = "%Y-%m-%d %H:%M:%S")
ggplot(data = filtered_data, aes(x = Date.Time..GMT.07.00, y = DO_mgL, color = Site))
filtered_data <- filtered_data[order(filtered_data$Date.Time..GMT.07.00), ]
geom_line(na.rm = TRUE)
ggplot(data = filtered_data, aes(x = Date.Time..GMT.07.00, y = Temp_C, color = Site))
geom_line(na.rm = TRUE)
ggplot(data = filtered_data, aes(x = Date.Time..GMT.07.00, y = Temp_C, color = Site, group = Site))
geom_line(na.rm = TRUE)
str(filtered_data)
ggplot(data = filtered_data, aes(x = Date.Time..GMT.07.00, y = Temp_C, color = Site))
geom_line(na.rm = TRUE)
ggplot(data = filtered_data, aes(x = Date.Time..GMT.07.00, y = Temp_C, color = Site)) +
geom_line(na.rm = TRUE)
ggplot(data = filtered_data, aes(x = Date.Time..GMT.07.00, y = Temp_C, color = Site)) +
geom_line(na.rm = TRUE) +
labs(x = " ", y = "DO (mg/L)", color = "Site")
## make plot of Temp
ggplot(data = filtered_data, aes(x = Date.Time..GMT.07.00, y = Temp_C, color = Site)) +
geom_line(na.rm = TRUE) +
labs(title = "Site Temperature OVer Time", x = " ", y = "Temperature, Celcius", color = "Site")
## make plot of Temp
ggplot(data = filtered_data, aes(x = Date.Time..GMT.07.00, y = Temp_C, color = Site)) +
geom_line(na.rm = TRUE) +
labs(title = "Site Temperature Over Time", x = " ", y = "Temperature, Celcius", color = "Site")
#Packages
library(tidyverse)
#Read in the datat
man_Do_Temp  <- read.csv("man_Do_Temp.csv")
chelsea_Do_Temp <- read.csv("chelsea_Do_Temp.csv")
thorn_Do_Temp <- read.csv("thorn_Do_Temp.csv")
hood_Do_Temp <- read.csv("hood_Do_Temp.csv")
#inspect the data
str(chelsea_Do_Temp)
str(thorn_Do_Temp)
str(hood_Do_Temp)
##merge all data into one file
allDoTemp <- rbind(man_Do_Temp, chelsea_Do_Temp, hood_Do_Temp, thorn_Do_Temp) %>% filter(datetime != "NA")
# Convert the Date.Time..GMT.07.00 column to date-time format
allDoTemp <- allDoTemp %>%
mutate(Date.Time..GMT.07.00 = mdy_hm(Date.Time..GMT.07.00, tz = "Etc/GMT+7"))
##R can't handle our date and time format, use lubridate to fix this
str(allDoTemp)
allDoTemp$datetime <- mdy_hm(allDoTemp$datetime)
allDoTemp$datetime<-mdy_hm(allDoTemp$datetime)
#Check end of data
tail(allDoTemp)
# Filter out rows where Date.Time..GMT.07.00 is less than or equal to "2024-04-30 12:00:00"
filtered_data <- allDoTemp %>%
filter(Date.Time..GMT.07.00 >= ymd_hms("2024-04-30 12:00:00", tz = "Etc/GMT+7"))
allDoTemp %>%
filter(date >= "2024-04-30 12:00:00")
# Converting to POSIXct datetime
filtered_data$Date.Time..GMT.07.00 <- as.POSIXct(filtered_data$Date.Time..GMT.07.00, format = "%Y-%m-%d %H:%M:%S")
filtered_data <- filtered_data[order(filtered_data$Date.Time..GMT.07.00), ]
## make plot of Temp and DO
ggplot(data = filtered_data, aes(x = Date.Time..GMT.07.00, y = Temp_C, color = Site)) +
geom_line(na.rm = TRUE) +
labs(title = "Site Temperature Over Time", x = " ", y = "Temperature, Celcius", color = "Site")
DO_overtime <- ggplot(data = filtered_data, aes(x = Date.Time..GMT.07.00, y = Temp_C, color = Site)) +
geom_line(na.rm = TRUE) +
labs(title = "Site Temperature Over Time", x = " ", y = "Temperature, Celcius", color = "Site")
str(allDoTemp)
View(filtered_data)
daily_tempavg <- filtered_data %>%
group_by(Date = as.Date(floor_date(Date.Time..GMT.07.00, "day"))) %>% #group by date
summarize(Average_Value = mean(Temp_C, na.rm = TRUE))
View(daily_tempavg)
View(daily_tempavg)
daily_tempavg <- filtered_data %>%
group_by(Site, Date = as.Date(floor_date(Date.Time..GMT.07.00, "day"))) %>% #group by date
summarize(Average_Value = mean(Temp_C, na.rm = TRUE))
#DO
daily_DOavg <- filtered_data %>%
group_by(Site, Date = as.Date(floor_date(Date.Time..GMT.07.00, "day"))) %>%
summarize(Average_Vale =mean(DO_mgL, na.rm = TRUE))
View(daily_DOavg)
daily_tempavg <- filtered_data %>%
group_by(Site, Date = as.Date(floor_date(Date.Time..GMT.07.00, "day"))) %>% #group by date
summarize(Average_Temp = mean(Temp_C, na.rm = TRUE)) #get averages
ggplot(data= daily_tempavg, aes(x = Date, y = Average_Temp, color = Site)) +
geom_line(na.rm = TRUE) +
labs(title = "Site Temperature Over Time", x = " ", y = "Temperature, Celcius", color = "Site")
daily_DOavg <- filtered_data %>%
group_by(Site, Date = as.Date(floor_date(Date.Time..GMT.07.00, "day"))) %>%
summarize(Average_DO =mean(DO_mgL, na.rm = TRUE))
ggplot(data= daily_DOavg, aes(x = Date, y = Average_DO, color = Site)) +
geom_line(na.rm = TRUE) +
labs(title = "Dissolved O2 Over Time", x = " ", y = "DO, mg/L", color = "Site")
```{r, results=FALSE, warning=FALSE, error=FALSE, message=FALSE, }
library(tidyverse)
library(here)
library(survival)
library(ggfortify)
library(ggsurvfit)
library(survminer)
library(tidyverse)
library(here)
library(survival)
library(ggfortify)
library(ggsurvfit)
library(survminer)
library(gridExtra)
library(frailtyEM)
survdat <- read.csv(here("Data", "MAY_2023_JULY_2024_MORTSBYBAG.csv"))
```{r, warning=FALSE, error=FALSE, message=FALSE}
survdat <- read.csv(here("Data", "MAY_2023_JULY_2024_MORTSBYBAG.csv"))
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
View(survdat)
View(survdat)
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year"), as.factor)
str(survdat)
widebagmort <- pivot_wider(survdat[-c(6)], names_from = Month, values_from = Mort_count) #C6 is removed because this is numerical month
#replace NA in the mortality columns with 0
widebagmort <- widebagmort %>%
mutate_at(vars(May, June, July, August, September, October), ~replace_na(., 0))
View(widebagmort)
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_Year"), as.factor)
View(survdat)
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor)
str(survdat)
widebagmort <- pivot_wider(survdat[-c(6)], names_from = Month_year, values_from = Mort_count) #C6 is removed because this is numerical month
View(widebagmort)
#replace NA in the mortality columns with 0
widebagmort <- widebagmort %>%
mutate_at(vars(May_2023, June_2023, July_2023, August_2023, September_2023, October_2023, May_2024, June_2024, July_2024), ~replace_na(., 0))
View(widebagmort)
widebagmort$April_2023_survivors <- 50
widebagmort$May_2023_survivors <- widebagmort$April_2023_survivors-widebagmort$May_2023
widebagmort$June_2023_survivors <- widebagmort$May_2023_survivors-widebagmort$June_2023
widebagmort$July_2023_survivors <- widebagmort$June_2023_survivors-widebagmort$July_2023
widebagmort$August_2023_survivors <- widebagmort$July_2023_survivors-widebagmort$August_2023
widebagmort$September_2023_survivors <- widebagmort$August_2023_survivors-widebagmort$September_2023
widebagmort$October_2023_survivors <- widebagmort$Sepember_2023_survivors-widebagmort$October_2023
widebagmort$May_2024_survivors <- widebagmort$October_2023_survivors-widebagmort$May_2024
widebagmort$June_2024_survivors <- widebagmort$May_2024_survivors-widebagmort$June_2024
widebagmort$July_2024_survivors <- widebagmort$June_2024_survivors-widebagmort$July_2024
widebagmort$October_2023_survivors <- widebagmort$September_2023_survivors-widebagmort$October_2023
widebagmort$May_2024_survivors <- widebagmort$October_2023_survivors-widebagmort$May_2024
widebagmort$June_2024_survivors <- widebagmort$May_2024_survivors-widebagmort$June_2024
widebagmort$July_2024_survivors <- widebagmort$June_2024_survivors-widebagmort$July_2024
View(widebagmort)
View(widebagmort)
View(widebagmort)
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor)
str(survdat)
library(tidyverse)
library(here)
library(survival)
library(ggfortify)
library(ggsurvfit)
library(survminer)
library(gridExtra)
library(frailtyEM)
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
View(survdat)
View(widebagmort)
View(widebagmort)
View(widebagmort)
View(widebagmort)
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor)
str(survdat)
widebagmort <- pivot_wider(survdat[-c(6)], names_from = Month_year, values_from = Mort_count) #C6 is removed because this is numerical month
View(widebagmort)
#replace NA in the mortality columns with 0
widebagmort <- widebagmort %>%
mutate_at(vars(May_2023, June_2023, July_2023, August_2023, September_2023, October_2023, May_2024, June_2024, July_2024), ~replace_na(., 0))
widebagmort$April_2023_survivors <- 50
widebagmort$May_2023_survivors <- widebagmort$April_2023_survivors-widebagmort$May_2023
widebagmort$June_2023_survivors <- widebagmort$May_2023_survivors-widebagmort$June_2023
widebagmort$July_2023_survivors <- widebagmort$June_2023_survivors-widebagmort$July_2023
widebagmort$August_2023_survivors <- widebagmort$July_2023_survivors-widebagmort$August_2023
widebagmort$September_2023_survivors <- widebagmort$August_2023_survivors-widebagmort$September_2023
widebagmort$October_2023_survivors <- widebagmort$September_2023_survivors-widebagmort$October_2023
widebagmort$May_2024_survivors <- widebagmort$October_2023_survivors-widebagmort$May_2024
widebagmort$June_2024_survivors <- widebagmort$May_2024_survivors-widebagmort$June_2024
widebagmort$July_2024_survivors <- widebagmort$June_2024_survivors-widebagmort$July_2024
no_survivors <- widebagmort %>% pivot_longer(cols=c(15:24),#######################As months are added make sure their columns are selected - change to an auto thing*************
names_to='Month_survivor',
values_to='No_survivors') %>%
select("Site", "Bag_Col", "Bag_no",'Month_survivor','No_survivors')
no_survivors <- widebagmort %>% pivot_longer(cols=c(15:24),#######################As months are added make sure their columns are selected - change to an auto thing*************
names_to='Month_survivor',
values_to='No_survivors') %>%
select("Site", "Bag_Col", "Bag_no",'Month_survivor','No_survivors')
no_survivors$Month_survivor <- as.factor(no_survivors$Month_survivor)
no_survivors
no_survivors %>% group_by(Site, Bag_Col) %>% summarise(nbags=n())
View(survdat)
View(no_survivors)
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
## Data Wrangling
Correct the data structure
```{r, warning=FALSE, error=FALSE, message=FALSE}
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor)
str(survdat)
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor)
str(survdat)
Create a new data sheet that calculates the number of survivors at each sampling event (as opposed to the number of moralities)
```{r, warning=FALSE, error=FALSE, message=FALSE, echo=FALSE}
widebagmort <- pivot_wider(survdat[-c(6)], names_from = Month_year, values_from = Mort_count) #C6 is removed because this is numerical month
#replace NA in the mortality columns with 0
widebagmort <- widebagmort %>%
mutate_at(vars(May_2023, June_2023, July_2023, August_2023, September_2023, October_2023, May_2024, June_2024, July_2024), ~replace_na(., 0))
widebagmort$April_2023_survivors <- 50
widebagmort$May_2023_survivors <- widebagmort$April_2023_survivors-widebagmort$May_2023_survivors
widebagmort$July_2023_survivors <- widebagmort$June_2023_survivors-widebagmort$July_2023_survivors
widebagmort$August_2023_survivors <- widebagmort$July_2023_survivors-widebagmort$August_2023_survivors
widebagmort$September_2023_survivors <- widebagmort$August_2023_survivors-widebagmort$September_2023_survivors
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
## Data Wrangling
Correct the data structure
```{r, warning=FALSE, error=FALSE, message=FALSE}
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor)
str(survdat)
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor)
str(survdat)
Create a new data sheet that calculates the number of survivors at each sampling event (as opposed to the number of moralities)
```{r, warning=FALSE, error=FALSE, message=FALSE, echo=FALSE}
widebagmort <- pivot_wider(survdat[-c(6)], names_from = Month_year, values_from = Mort_count) #C6 is removed because this is numerical month
#replace NA in the mortality columns with 0
widebagmort <- widebagmort %>%
mutate_at(vars(May_2023, June_2023, July_2023, August_2023, September_2023, October_2023, May_2024, June_2024, July_2024), ~replace_na(., 0))
widebagmort$April_2023_survivors <- 50
widebagmort$May_2023_survivors <- widebagmort$April_2023_survivors-widebagmort$May_2023_survivors
View(widebagmort)
widebagmort$May_2023_survivors <- widebagmort$April_2023_survivors-widebagmort$May_2023
widebagmort$May_2023_survivors <- widebagmort$April_2023_survivors-widebagmort$May_2023
widebagmort$June_2023_survivors <- widebagmort$May_2023_survivors-widebagmort$June_2023
widebagmort$July_2023_survivors <- widebagmort$June_2023_survivors-widebagmort$July_2023
widebagmort$August_2023_survivors <- widebagmort$July_2023_survivors-widebagmort$August_2023
widebagmort$September_2023_survivors <- widebagmort$August_2023_survivors-widebagmort$September_2023
widebagmort$October_2023_survivors <- widebagmort$September_2023_survivors-widebagmort$October_2023
widebagmort$May_2024_survivors <- widebagmort$October_2023_survivors-widebagmort$May_2024
widebagmort$June_2024_survivors <- widebagmort$May_2024_survivors-widebagmort$June_2024
widebagmort$July_2024_survivors <- widebagmort$June_2024_survivors-widebagmort$July_2024
no_survivors <- widebagmort %>% pivot_longer(cols=c(15:24),#######################As months are added make sure their columns are selected - change to an auto thing*************
names_to='Month_survivor',
values_to='No_survivors') %>%
select("Site", "Bag_Col", "Bag_no",'Month_survivor','No_survivors')
no_survivors$Month_survivor <- as.factor(no_survivors$Month_survivor)
no_survivors
no_survivors <- widebagmort %>% pivot_longer(cols=c(15:24),#######################As months are added make sure their columns are selected - change to an auto thing*************
names_to='Month_survivor',
values_to='No_survivors') %>%
select("Site", "Bag_Col", "Bag_no",'Month_survivor','No_survivors')
no_survivors$Month_survivor <- as.factor(no_survivors$Month_survivor)
no_survivors
Double check that all bags are accounted for. There should be 8 bags per colour site per sampling event = 56 as of October 2023
```{r, echo=FALSE}
no_survivors %>% group_by(Site, Bag_Col) %>% summarise(nbags=n())
View(no_survivors)
mean_survival_proportion <- no_survivors %>%
group_by(Site, Bag_Col, Month_survivor) %>%
summarise(meansurv=mean(No_survivors), semsurv=sd(No_survivors)/sqrt(n()))
mean_survival_proportion
mean_survival_proportion %>% ggplot(aes(x=factor(Month_survivor, level=c("April_survivors", 'May_survivors', 'June_survivors', 'July_survivors', 'August_survivors', 'Sept_survivors', 'Oct_survivors')), ###add new months here**********
y=meansurv, colour = Bag_Col, group=Bag_Col))+
scale_x_discrete(labels=c('April', 'May', 'June', 'July', 'August', 'September', 'October'))+####################Add new months here ***********************
scale_color_manual(values=c('blue', 'green', 'red'), name = "Ploidy", labels = c("Diploid", "Induced Triploid", "Mated Triploid"))+
geom_errorbar(aes(ymin=meansurv-semsurv, ymax=meansurv+semsurv))+
geom_line()+facet_grid(~Site)+
xlab("Month")+ylab("Mean number of survivors per bag (± SEM)")+
theme_bw()+ggtitle("Number of survivors since experiment start")
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
library(tidyverse)
library(here)
library(survival)
library(ggfortify)
library(ggsurvfit)
library(survminer)
library(gridExtra)
library(frailtyEM)
library(tidyverse)
library(here)
library(survival)
library(ggfortify)
library(ggsurvfit)
library(survminer)
library(gridExtra)
library(frailtyEM)
Read in the mortality data from the field experiments
```{r, warning=FALSE, error=FALSE, message=FALSE}
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor)
str(survdat)
widebagmort <- pivot_wider(survdat[-c(6)], names_from = Month_year, values_from = Mort_count) #C6 is removed because this is numerical month
View(widebagmort)
#replace NA in the mortality columns with 0
widebagmort <- widebagmort %>%
mutate_at(vars(May_2023, June_2023, July_2023, August_2023, September_2023, October_2023, May_2024, June_2024, July_2024), ~replace_na(., 0))
widebagmort$April_2023_survivors <- 50
widebagmort$May_2023_survivors <- widebagmort$April_2023_survivors-widebagmort$May_2023
widebagmort$June_2023_survivors <- widebagmort$May_2023_survivors-widebagmort$June_2023
widebagmort$July_2023_survivors <- widebagmort$June_2023_survivors-widebagmort$July_2023
widebagmort$August_2023_survivors <- widebagmort$July_2023_survivors-widebagmort$August_2023
widebagmort$September_2023_survivors <- widebagmort$August_2023_survivors-widebagmort$September_2023
widebagmort$October_2023_survivors <- widebagmort$September_2023_survivors-widebagmort$October_2023
widebagmort$May_2024_survivors <- widebagmort$October_2023_survivors-widebagmort$May_2024
widebagmort$June_2024_survivors <- widebagmort$May_2024_survivors-widebagmort$June_2024
widebagmort$July_2024_survivors <- widebagmort$June_2024_survivors-widebagmort$July_2024
no_survivors <- widebagmort %>% pivot_longer(cols=c(15:24),#######################As months are added make sure their columns are selected - change to an auto thing*************
names_to='Month_survivor',
values_to='No_survivors') %>%
select("Site", "Bag_Col", "Bag_no",'Month_survivor','No_survivors')
no_survivors$Month_survivor <- as.factor(no_survivors$Month_survivor)
no_survivors
no_survivors <- widebagmort %>% pivot_longer(cols=c(15:24),#######################As months are added make sure their columns are selected - change to an auto thing*************
names_to='Month_survivor',
values_to='No_survivors') %>%
select("Site", "Bag_Col", "Bag_no",'Month_survivor','No_survivors')
no_survivors$Month_survivor <- as.factor(no_survivors$Month_survivor)
no_survivors
Double check that all bags are accounted for. There should be 8 bags per colour site per sampling event = 56 as of October 2023
```{r, echo=FALSE}
no_survivors %>% group_by(Site, Bag_Col) %>% summarise(nbags=n())
View(no_survivors)
View(survdat)
View(widebagmort)
widebagmort <- widebagmort %>%
group_by(Site, Bag_Col, Bag_no)
widebagmort$April_2023_survivors <- 50
View(widebagmort)
widebagmort <- pivot_wider(survdat[-c(6)], names_from = Month_year, values_from = Mort_count)#C6 is removed because this is numerical month
View(widebagmort)
#replace NA in the mortality columns with 0
widebagmort <- widebagmort %>%
mutate_at(vars(May_2023, June_2023, July_2023, August_2023, September_2023, October_2023, May_2024, June_2024, July_2024), ~replace_na(., 0))
widebagmort <- widebagmort %>%
group_by(Site, Bag_Col, Bag_no)
summarise(widebagmort)
widebagmort <- pivot_wider(survdat[-c(6)], names_from = Month_year, values_from = Mort_count)#C6 is removed because this is numerical month
View(widebagmort)
library(tidyverse)
library(here)
library(survival)
library(ggfortify)
library(ggsurvfit)
library(survminer)
library(gridExtra)
library(frailtyEM)
library(tidyverse)
library(here)
library(survival)
library(ggfortify)
library(ggsurvfit)
library(survminer)
library(gridExtra)
library(frailtyEM)
Read in the mortality data from the field experiments
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
## Data Wrangling
Correct the data structure
```{r, warning=FALSE, error=FALSE, message=FALSE}
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor)
str(survdat)
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor)
str(survdat)
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor, ~replace_na(., 0))
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor)
survdat <- replace_na(.,0)
survdat <- survdat %>%
mutate(across(everything(), ~ ifelse(is.na(.), 0, .)))
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
```
survdat <- read.csv(here("MAY_2023_JULY_2024_MORTSBYBAG.csv"))
survdat <- survdat %>% mutate_at(c("Site", "Bag_Col", "Month", "Bag_no", "Month_no", "Year", "Month_year"), as.factor)
str(survdat)
widebagmort <- pivot_wider(survdat[-c(6)], names_from = Month_year, values_from = Mort_count)#C6 is removed because this is numerical month
widebagmort <- pivot_wider(survdat[-c(6, 3, 7)], names_from = Month_year, values_from = Mort_count)#C6 is removed because this is numerical month
#replace NA in the mortality columns with 0
widebagmort <- widebagmort %>%
mutate_at(vars(May_2023, June_2023, July_2023, August_2023, September_2023, October_2023, May_2024, June_2024, July_2024), ~replace_na(., 0))
widebagmort <- widebagmort %>%
group_by(Site, Bag_Col, Bag_no, )
summarise(widebagmort)
widebagmort$April_2023_survivors <- 50
widebagmort$May_2023_survivors <- widebagmort$April_2023_survivors-widebagmort$May_2023
widebagmort$June_2023_survivors <- widebagmort$May_2023_survivors-widebagmort$June_2023
widebagmort$July_2023_survivors <- widebagmort$June_2023_survivors-widebagmort$July_2023
widebagmort$August_2023_survivors <- widebagmort$July_2023_survivors-widebagmort$August_2023
widebagmort$September_2023_survivors <- widebagmort$August_2023_survivors-widebagmort$September_2023
widebagmort$October_2023_survivors <- widebagmort$September_2023_survivors-widebagmort$October_2023
widebagmort$May_2024_survivors <- widebagmort$October_2023_survivors-widebagmort$May_2024
widebagmort$June_2024_survivors <- widebagmort$May_2024_survivors-widebagmort$June_2024
widebagmort$July_2024_survivors <- widebagmort$June_2024_survivors-widebagmort$July_2024
no_survivors <- widebagmort %>% pivot_longer(cols=c(12:22),#######################As months are added make sure their columns are selected - change to an auto thing*************
names_to='Month_survivor',
values_to='No_survivors') %>%
select("Site", "Bag_Col", "Bag_no",'Month_survivor','No_survivors')
no_survivors <- widebagmort %>% pivot_longer(cols=c(13:22),#######################As months are added make sure their columns are selected - change to an auto thing*************
names_to='Month_survivor',
values_to='No_survivors') %>%
select("Site", "Bag_Col", "Bag_no",'Month_survivor','No_survivors')
no_survivors$Month_survivor <- as.factor(no_survivors$Month_survivor)
no_survivors
no_survivors %>% group_by(Site, Bag_Col) %>% summarise(nbags=n())
mean_survival_proportion <- no_survivors %>%
group_by(Site, Bag_Col, Month_survivor) %>%
summarise(meansurv=mean(No_survivors), semsurv=sd(No_survivors)/sqrt(n()))
mean_survival_proportion
mean_survival_proportion
mean_survival_proportion %>% ggplot(aes(x=factor(Month_survivor, level=c("April_survivors", 'May_survivors', 'June_survivors', 'July_survivors', 'August_survivors', 'Sept_survivors', 'Oct_survivors')), ###add new months here**********
y=meansurv, colour = Bag_Col, group=Bag_Col))+
scale_x_discrete(labels=c('April', 'May', 'June', 'July', 'August', 'September', 'October'))+####################Add new months here ***********************
scale_color_manual(values=c('blue', 'green', 'red'), name = "Ploidy", labels = c("Diploid", "Induced Triploid", "Mated Triploid"))+
geom_errorbar(aes(ymin=meansurv-semsurv, ymax=meansurv+semsurv))+
geom_line()+facet_grid(~Site)+
xlab("Month")+ylab("Mean number of survivors per bag (± SEM)")+
theme_bw()+ggtitle("Number of survivors since experiment start")
mean_survival_proportion %>% ggplot(aes(x=factor(Month_survivor, level=c("April_2023_survivors" "May_2023_survivors" "June_2023_survivors" "July_2023_survivors" "August_2023_survivors" "September_2023_survivors" "October_2023_survivors" "May_2024_survivors" "June_2024_survivors" "July_2024_survivors")), ###add new months here**********
View(mean_survival_proportion)
mean_survival_proportion %>% ggplot(aes(x=factor(Month_survivor, level=c("April_2023_survivors", "May_2023_survivors", "June_2023_survivors", "July_2023_survivors", "August_2023_survivors", "September_2023_survivors", "October_2023_survivors", "May_2024_survivors", "June_2024_survivors", "July_2024_survivors")), ###add new months here**********
y=meansurv, colour = Bag_Col, group=Bag_Col))+
scale_x_discrete(labels=c('April 23', 'May 23', 'June 23', 'July 23', 'August 23', 'September 23', 'October 23' 'May 24', 'June 24', 'July 24'))+####################Add new months here ***********************
mean_survival_proportion %>% ggplot(aes(x=factor(Month_survivor, level=c("April_2023_survivors", "May_2023_survivors", "June_2023_survivors", "July_2023_survivors", "August_2023_survivors", "September_2023_survivors", "October_2023_survivors", "May_2024_survivors", "June_2024_survivors", "July_2024_survivors")), ###add new months here**********
y=meansurv, colour = Bag_Col, group=Bag_Col))+
scale_x_discrete(labels=c('April 23', 'May 23', 'June 23', 'July 23', 'August 23', 'September 23', 'October 23', 'May 24', 'June 24', 'July 24'))+####################Add new months here ***********************
scale_color_manual(values=c('blue', 'green', 'red'), name = "Ploidy", labels = c("Diploid", "Induced Triploid", "Mated Triploid"))+
geom_errorbar(aes(ymin=meansurv-semsurv, ymax=meansurv+semsurv))+
geom_line()+facet_grid(~Site)+
xlab("Month")+ylab("Mean number of survivors per bag (± SEM)")+
theme_bw()+ggtitle("Number of survivors since experiment start")
theme(axis.text.x = element_text(angle = 90, hjust = 1)
mean_survival_proportion %>% ggplot(aes(x=factor(Month_survivor, level=c("April_2023_survivors", "May_2023_survivors", "June_2023_survivors", "July_2023_survivors", "August_2023_survivors", "September_2023_survivors", "October_2023_survivors", "May_2024_survivors", "June_2024_survivors", "July_2024_survivors")), ###add new months here**********
mean_survival_proportion %>% ggplot(aes(x=factor(Month_survivor, level=c("April_2023_survivors", "May_2023_survivors", "June_2023_survivors", "July_2023_survivors", "August_2023_survivors", "September_2023_survivors", "October_2023_survivors", "May_2024_survivors", "June_2024_survivors", "July_2024_survivors")), ###add new months here**********
y=meansurv, colour = Bag_Col, group=Bag_Col))+
scale_x_discrete(labels=c('April 23', 'May 23', 'June 23', 'July 23', 'August 23', 'September 23', 'October 23', 'May 24', 'June 24', 'July 24'))+####################Add new months here ***********************
scale_color_manual(values=c('blue', 'green', 'red'), name = "Ploidy", labels = c("Diploid", "Induced Triploid", "Mated Triploid"))+
geom_errorbar(aes(ymin=meansurv-semsurv, ymax=meansurv+semsurv))+
geom_line()+facet_grid(~Site)+
xlab("Month")+ylab("Mean number of survivors per bag (± SEM)")+
theme_bw()+ggtitle("Number of survivors since experiment start")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
